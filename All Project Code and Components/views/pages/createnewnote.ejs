<%- include ('../partials/head') %>
<%- include ('../partials/menu') %>

<main>
  <div class="container">
    <body>
      <br>
      <%# Journal Selection Dropdown and Title Entry (To-Do)%>
      <div class="input-group mb-3"> 
        <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">Journal</button>
        <ul class="dropdown-menu">
          <li><a class="dropdown-item" href="#">Example Journal 1</a></li>
          <li><a class="dropdown-item" href="#">Example Journal 2</a></li>
          <li><a class="dropdown-item" href="#">Example Journal 3</a></li>
        </ul>
        <input id="note-title" type="text" class="form-control char-limited" aria-label="Text input with dropdown button" placeholder="Enter Title" maxlength="100">
        <p><span class="char-count">0/100</span></p>
      </div>
      <br>

      <%# Note Entry %>
      <div class="input-group">
        <textarea id="note-text" class="form-control char-limited" aria-label="With textarea" style="height: 400px;" placeholder="Enter Note" maxlength="2000"></textarea>
        <p><span class="char-count">0/2000</span></p>
      </div>
      <br/>

      <!-- see https://www.w3schools.com/charsets/ref_emoji_smileys.asp for list of emoji codes -->
      <div class="input-group">
        <span class="input-group-text">Mood</span>
        <select class="form-select" name="note-mood" id="note-mood">        
          <option value="1">&#128544; angry</option>
          <option value="2">&#128550; unhappy</option>
          <option selected value="3">&#128528; neutral</option>
          <option value="4">&#128578; happy</option>
          <option value="5">&#128513; very happy</option>        
        </select>
      </div>
    </br>
        
      <%# Cancel Button %>
      <!-- div class="mt-3 text-center" -->
      <div >  
        <a href="/home"><button id="cancel-note" class="btn btn-primary">Cancel</button></a>      
        <%# Format Button %> 
        <button class="btn btn-primary" id="Format-note" onclick="submitParagraph()">Format Note</button>
        <%# Save Button %>
        <button id="save-note" class="btn btn-primary">Save Note</button>
     
        <script src="https://cdn.jsdelivr.net/npm/@openai/api"></script>
      <script>
        var saveNoteButton = document.querySelector('#save-note'); 
        saveNoteButton.addEventListener('click', function() { //on click of Save Note
            var title = document.querySelector('#note-title').value.trim(); //gets title
            var content = document.querySelector('#note-text').value.trim(); //gets text
            var noteMood = document.querySelector('#note-mood').value.trim(); //gets text
            fetch('/savenote', { //calls /savenote and passes note info
            method: 'POST',
            headers: {
              'Content-Type': 'application/json' //data in json form so it can be parsed by API call
            },
            body: JSON.stringify({ //converts data to json strings
              entry_title: title,
              raw_text: content,
              journal_id: 1,    // TODO: use value from journal drop down list
              mood: noteMood
            })
          })
          .then(function(response) {
            if (response.ok) {
              return response.json();
            } else {
              throw new Error('An error occurred while saving the note');
            }
          })
          .then(function(data) {
            console.log(data);
            alert('Note saved successfully');
            window.location.href = 'home';
          })
          .catch(function(err) {
            console.error(err);
            alert(err.message);
          });
        });

        //character counter
        const inputs = document.querySelectorAll('.char-limited');
        inputs.forEach(input => {
          const charCount = input.nextElementSibling.querySelector('.char-count');
          input.addEventListener('input', () => {
            const count = input.value.length;
            const max = input.maxLength;
            charCount.innerText = `${count}/${max}`;
          });
        });

        const apiKey = '';
      
        // initialize the API client
        var openai = new OpenAI(apiKey);
        
        function submitParagraph() {
          // get the input paragraph
          var inputParagraph = document.querySelector('#note-text');
          
          // call the OpenAI API to format the paragraph
          openai.complete({
            engine: 'davinci',
            prompt: `format and correct any spelling in the following text:\n\n${inputParagraph}\n\n`,
            maxTokens: 2048,
            temperature: 0.5,
            n: 1,
            stream: false,
          }).then(response => {
            // get the formatted paragraph from the API response
            var formattedParagraph = response.data.choices[0].text;
            
            // display the formatted paragraph
            document.querySelector('#note-text') = formattedParagraph;
          }).catch(error => {
            console.error(error);
            alert('An error occurred while formatting the paragraph.');
          });
        }
      </script>
    </body>
  </div>
</main>



<%- include ('../partials/message') %>
<%- include ('../partials/footer') %>